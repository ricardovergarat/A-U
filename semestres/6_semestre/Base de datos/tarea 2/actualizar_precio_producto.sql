CREATE OR REPLACE PROCEDURE TRABAJO_2.ACTUALIZAR_PRECIO_PRODUCTO(
    CODIGO_PRODUCTO_ENTRADA IN PRODUCTO.CODIGO_PRODUCTO%TYPE,
    NUEVO_PRECIO IN PRODUCTO.PRECIO %TYPE 
)
IS 
    REPETICIONES_CODIGO NUMBER;
    CODIGO_PRODUCTO_ES_NULL EXCEPTION;
    PRODUCTO_INEXISTENTE EXCEPTION;
    NUEVO_PRECIO_ES_NULL EXCEPTION;
    PRECIO_INVALIDO EXCEPTION;
BEGIN
    LOCK TABLE PRODUCTO IN ROW EXCLUSIVE MODE;
    IF CODIGO_PRODUCTO_ENTRADA IS NULL THEN
        RAISE CODIGO_PRODUCTO_ES_NULL;
    END IF;
    SELECT COUNT(*) INTO REPETICIONES_CODIGO FROM PRODUCTO
    WHERE CODIGO_PRODUCTO = CODIGO_PRODUCTO_ENTRADA;
    IF REPETICIONES_CODIGO = 0 THEN
        RAISE PRODUCTO_INEXISTENTE;
    ELSE
        IF NUEVO_PRECIO IS NULL THEN
            RAISE NUEVO_PRECIO_ES_NULL;
        ELSIF NUEVO_PRECIO < 1 THEN
            RAISE PRECIO_INVALIDO;
        ELSE
            UPDATE PRODUCTO 
            SET PRECIO = NUEVO_PRECIO
            WHERE CODIGO_PRODUCTO = CODIGO_PRODUCTO_ENTRADA;
            COMMIT;
        END IF;
    END IF;
    
    EXCEPTION
        WHEN CODIGO_PRODUCTO_ES_NULL THEN
            DBMS_OUTPUT.PUT_LINE('CODIGO PRODUCTO ES NULL');
            ROLLBACK;
        WHEN PRODUCTO_INEXISTENTE THEN
            DBMS_OUTPUT.PUT_LINE('NO EXISTE ESE PRODUCTO');
            ROLLBACK;
        WHEN NUEVO_PRECIO_ES_NULL THEN
            DBMS_OUTPUT.PUT_LINE('EL NUEVO PRECIO ES NULL');
            ROLLBACK;
        WHEN PRECIO_INVALIDO THEN
            DBMS_OUTPUT.PUT_LINE('NO SE ADMITEN PRECIOS NEGATIVOS');
            ROLLBACK;
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR NO IDENTIFICADO');
            ROLLBACK;
END;
