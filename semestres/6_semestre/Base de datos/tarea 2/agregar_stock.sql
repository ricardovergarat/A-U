CREATE OR REPLACE PROCEDURE TRABAJO_2.AGREGAR_STOCK(
    CODIGO_PRODUCTO_ENTRADA IN PRODUCTO.CODIGO_PRODUCTO%TYPE,
    AUMENTO_DE_STOCK IN PRODUCTO.STOCK%TYPE
)
IS 
    REPETICIONES_CODIGO NUMBER;
    STOCK_ACTUAL NUMBER;
    CODIGO_PRODUCTO_ES_NULL EXCEPTION;
    PRODUCTO_INEXISTENTE EXCEPTION;
    AUMENTO_DE_STOCK_ES_NULL EXCEPTION;
    AUMENTO_NEGATIVO EXCEPTION;
BEGIN
    LOCK TABLE PRODUCTO IN ROW EXCLUSIVE MODE;
    IF CODIGO_PRODUCTO_ENTRADA IS NULL THEN
        RAISE CODIGO_PRODUCTO_ES_NULL;
    END IF;
    SELECT COUNT(*) INTO REPETICIONES_CODIGO FROM PRODUCTO
    WHERE CODIGO_PRODUCTO = CODIGO_PRODUCTO_ENTRADA;
    IF REPETICIONES_CODIGO = 0 THEN
        RAISE PRODUCTO_INEXISTENTE;
    ELSE
        IF AUMENTO_DE_STOCK IS NULL THEN
            RAISE AUMENTO_DE_STOCK_ES_NULL;
        END IF;
        SELECT STOCK INTO STOCK_ACTUAL FROM PRODUCTO
        WHERE CODIGO_PRODUCTO = CODIGO_PRODUCTO_ENTRADA;
        IF AUMENTO_DE_STOCK < 0 THEN
            RAISE AUMENTO_NEGATIVO;
        ELSE
            UPDATE PRODUCTO
            SET STOCK = STOCK_ACTUAL + AUMENTO_DE_STOCK
            WHERE CODIGO_PRODUCTO = CODIGO_PRODUCTO_ENTRADA;
            COMMIT;
        END IF;
    END IF;
    
    EXCEPTION
        WHEN CODIGO_PRODUCTO_ES_NULL THEN
            DBMS_OUTPUT.PUT_LINE('CODIGO PRODUCTO ES NULL');
            ROLLBACK;
        WHEN PRODUCTO_INEXISTENTE THEN
            DBMS_OUTPUT.PUT_LINE('ESE PRODUCTO NO EXISTE');
            ROLLBACK;
        WHEN AUMENTO_DE_STOCK_ES_NULL THEN
            DBMS_OUTPUT.PUT_LINE('EL NUEVO AMENTO DE STOCK ES NULL');
            ROLLBACK;
        WHEN AUMENTO_NEGATIVO THEN
            DBMS_OUTPUT.PUT_LINE(' NO PUEDE AGREGAR STOCK NEGATIVO');
            ROLLBACK;
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR NO IDENTIFICADO');
            ROLLBACK;
END;
