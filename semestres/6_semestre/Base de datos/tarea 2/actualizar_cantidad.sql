CREATE OR REPLACE PROCEDURE TRABAJO_2.ACTUALIZAR_CANTIDAD(
    CODIGO_BOLETA_ENTRADA IN BOLETA.CODIGO_BOLETA%TYPE,
    NUEVA_CANTIDAD IN BOLETA.CANTIDAD%TYPE
)
IS 
    REPETICIONES_BOLETA NUMBER;
    CODIGO_BOLETA_ES_NULL EXCEPTION;
    BOLETA_INEXISTENTE EXCEPTION;
    NUEVA_CANTIDAD_ES_NULL EXCEPTION;
    CANTIDAD_INVALIDA EXCEPTION;
BEGIN
    LOCK TABLE BOLETA IN ROW EXCLUSIVE MODE;
    IF CODIGO_BOLETA_ENTRADA IS NULL THEN
        RAISE CODIGO_BOLETA_ES_NULL;
    END IF;
    SELECT COUNT(*) INTO REPETICIONES_BOLETA FROM BOLETA
    WHERE CODIGO_BOLETA = CODIGO_BOLETA_ENTRADA;
    IF REPETICIONES_BOLETA = 0 THEN
        RAISE BOLETA_INEXISTENTE;
    ELSE
        IF NUEVA_CANTIDAD IS NULL THEN
            RAISE NUEVA_CANTIDAD_ES_NULL;
        ELSIF NUEVA_CANTIDAD < 1 THEN
            RAISE CANTIDAD_INVALIDA;
        ELSE
            UPDATE BOLETA
            SET CANTIDAD = NUEVA_CANTIDAD
            WHERE CODIGO_BOLETA = CODIGO_BOLETA_ENTRADA;
            COMMIT;
        END IF;
    END IF;
    EXCEPTION
        WHEN CODIGO_BOLETA_ES_NULL THEN
            DBMS_OUTPUT.PUT_LINE('CODIGO BOLETA ES NULL');
            ROLLBACK;
        WHEN BOLETA_INEXISTENTE THEN
            DBMS_OUTPUT.PUT_LINE('NO EXISTE UNA BOLETA CON ESE CODIGO');
            ROLLBACK;
        WHEN NUEVA_CANTIDAD_ES_NULL THEN
            DBMS_OUTPUT.PUT_LINE('NUEVA CANTIDAD ES NULL');
            ROLLBACK;
        WHEN CANTIDAD_INVALIDA THEN
            DBMS_OUTPUT.PUT_LINE('SOLO SE PUEDEN COMPRAR CANTIDADES POSITIVAS');
            ROLLBACK;
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR NO IDENTIFICADO');
            ROLLBACK;
END;
